from aiogram import Bot, Dispatcher, types, executor
import random
import asyncio
import os

# –í–º–µ—Å—Ç–æ 'YOUR_TOKEN' –≤—Å—Ç–∞–≤—å —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø–æ–ª—É—á–∏—à—å –≤ BotFather
TOKEN = '8037185225:AAEdwbiVKyiTmdoH9j-dCSQ7J_Oh4SNKlSo'

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –¢–≤–æ–∏ —Ü–∏—Ç–∞—Ç—ã –º–æ—Ç–∏–≤–∞—Ü–∏–∏
motivations = [
    "–¢—ã –∫—É–∑–Ω–µ—Ü —Å–≤–æ–µ–π —Å—É–¥—å–±—ã. üî•",
    "–ù–µ—Ç –Ω–∏—á–µ–≥–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–≥–æ. üèÜ",
    "–ë–æ–ª—å –≤—Ä–µ–º–µ–Ω–Ω–∞, –≥–æ—Ä–¥–æ—Å—Ç—å –≤–µ—á–Ω–∞. ‚ö°",
    "–°–µ–≥–æ–¥–Ω—è —Ç—ã —Å—Ç—Ä–æ–∏—à—å —Å–≤–æ—ë –≤–µ–ª–∏–∫–æ–µ –∑–∞–≤—Ç—Ä–∞. üöÄ",
]

# –¢–≤–æ–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ä–æ—Å—Ç–∞
growth_tips = [
    "–ü–æ–≤–∏—Å–∞–Ω–∏—è –Ω–∞ —Ç—É—Ä–Ω–∏–∫–µ 3 —Ä–∞–∑–∞ –ø–æ 30 —Å–µ–∫—É–Ω–¥.",
    "–ô–æ–≥–∞ —Ä–∞—Å—Ç—è–∂–∫–∞ '—Å–æ–±–∞–∫–∞ –º–æ—Ä–¥–æ–π –≤–Ω–∏–∑'.",
    "–õ–µ—á—å —Å–ø–∞—Ç—å –¥–æ 22:30 –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –≥–æ—Ä–º–æ–Ω–∞ —Ä–æ—Å—Ç–∞.",
    "–ü—Ä–∏—ë–º —Ü–∏–Ω–∫–∞ –∏ –≤–∏—Ç–∞–º–∏–Ω–∞ D –ø–µ—Ä–µ–¥ —Å–Ω–æ–º."
]

# –ü–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å
daily_plan = """
üåÖ –£—Ç—Ä–æ:
- –ü–æ–¥—ä—ë–º 6:30
- –•–æ–ª–æ–¥–Ω–∞—è –≤–æ–¥–∞ –Ω–∞ –ª–∏—Ü–æ
- –õ—ë–≥–∫–∞—è –∑–∞—Ä—è–¥–∫–∞ 5 –º–∏–Ω—É—Ç
- –ó–∞–≤—Ç—Ä–∞–∫ + –≤–∏—Ç–∞–º–∏–Ω—ã

üß† –£—á—ë–±–∞:
- Java —Ç–µ–æ—Ä–∏—è + –ø—Ä–∞–∫—Ç–∏–∫–∞
- –ê–Ω–≥–ª–∏–π—Å–∫–∏–π Speaking
- –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π: –±–∞–∑–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã
- –ù–µ–º–µ—Ü–∫–∏–π: –±–∞–∑–æ–≤—ã–µ —Å–ª–æ–≤–∞
- –î–∏–∫—Ü–∏—è –∏ –≥–æ–ª–æ—Å
- –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ä–æ—Å—Ç–∞
- 5-–º–∏–Ω—É—Ç–Ω—ã–µ –ø–µ—Ä–µ—Ä—ã–≤—ã –∫–∞–∂–¥—ã–µ 50 –º–∏–Ω—É—Ç

üåô –í–µ—á–µ—Ä:
- –ü—Ä–æ–≥—É–ª–∫–∞ 15 –º–∏–Ω—É—Ç
- –ú–µ–¥–∏—Ç–∞—Ü–∏—è 5 –º–∏–Ω—É—Ç
- –î–Ω–µ–≤–Ω–∏–∫ —É—Å–ø–µ—Ö–∞
- –°–æ–Ω –≤ 22:30
"""

# –û–ø—ã—Ç –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á
xp_points = 0

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–≤–æ–π –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É. –ì–æ—Ç–æ–≤ –ø–æ–±–µ–∂–¥–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å? üî•\n\n–ù–∞–±–µ—Ä–∏ /plan —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å!")

@dp.message_handler(commands=['plan'])
async def plan(message: types.Message):
    await message.answer(daily_plan)

@dp.message_handler(commands=['tasks'])
async def tasks(message: types.Message):
    await message.answer("üõ°Ô∏è –¢–≤–æ–∏ –∑–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n- Java 3 —á–∞—Å–∞\n- –ê–Ω–≥–ª–∏–π—Å–∫–∏–π 2 —á–∞—Å–∞\n- –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π 45 –º–∏–Ω\n- –ù–µ–º–µ—Ü–∫–∏–π 45 –º–∏–Ω\n- –î–∏–∫—Ü–∏—è 30 –º–∏–Ω\n- –†–æ—Å—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è 30 –º–∏–Ω")

@dp.message_handler(commands=['xp'])
async def xp(message: types.Message):
    global xp_points
    xp_points += 10
    await message.answer(f"üî• –¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª 10 XP! –¢–≤–æ–π –æ–±—â–∏–π –æ–ø—ã—Ç: {xp_points} XP")

@dp.message_handler(commands=['motivation'])
async def motivation(message: types.Message):
    quote = random.choice(motivations)
    await message.answer(quote)

@dp.message_handler(commands=['habitica'])
async def habitica(message: types.Message):
    await message.answer("üåü –í Habitica —Å–æ–∑–¥–∞–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏:\n- Java - 3 —á–∞—Å–∞\n- –ê–Ω–≥–ª–∏–π—Å–∫–∏–π Speaking\n- –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π –±–∞–∑–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã\n- –ù–µ–º–µ—Ü–∫–∏–π –±–∞–∑–æ–≤—ã–µ —Å–ª–æ–≤–∞\n- –î–∏–∫—Ü–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è\n- –°–æ–Ω –¥–æ 22:30\n–ù–∞–≥—Ä–∞–∂–¥–∞–π —Å–µ–±—è XP –∑–∞ –∫–∞–∂–¥—É—é –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É!")

@dp.message_handler(commands=['stats'])
async def stats(message: types.Message):
    await message.answer(f"üìà –¢–µ–∫—É—â–∏–π –æ–ø—ã—Ç: {xp_points} XP\n–ü—Ä–æ–¥–æ–ª–∂–∞–π –∏–¥—Ç–∏ –∫ –ø–æ–±–µ–¥–µ!")

@dp.message_handler(commands=['growth'])
async def growth(message: types.Message):
    tip = random.choice(growth_tips)
    await message.answer(f"üå± –°–æ–≤–µ—Ç –ø–æ —Ä–æ—Å—Ç—É: {tip}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
